""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"" basic vimrc file for mickael Kerbrat                   ""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" cause I always made the mistake
command W w

" Set off unexpected things and reset options
set nocompatible

" Attempt to determine the type of a file based on its name and it's content
filetype indent plugin on

" syntax highlighting
syntax on

" Allows you to switch from an unsaved buffer without saving it first
set hidden

" Better command-line completion
set wildmenu

" Show partial commands in the last line of the screen
set showcmd

" Highlight searches (use <C-L> to temporarily turn off highlighting
set hlsearch

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase
set incsearch

" Allow backspacing over autoindent, line breaks and start of insert action
set backspace=indent,eol,start

" When opening a new line and no filetype-specific indenting is enabled, keep
" the same indent as the line you're currently on. Useful for READMEs, etc.
set autoindent

" Stop certain movements from always going to the first character of a line.
" While this behaviour deviates from that of Vi, it does what most users
" coming from other editors would expect.
set nostartofline

" Display the cursor position on the last line of the screen or in the
" status line of a window
set ruler

" Always display the status line, even if only one window is displayed
set laststatus=2

" Instead of failing a command because of unsaved changes, instead raise a
" dialogue asking if you wish to save changed files.
set confirm

" Use visual bell instead of beeping when doing something wrong
set visualbell

" And reset the terminal code for the visual bell.  If visualbell is set,
" and
" this line is also included, vim will neither flash nor beep.  If
" visualbell
" is unset, this does nothing.
set t_vb=

" Enable use of the mouse for all modes
set mouse=a

" Set the command window height to 2 lines, to avoid many cases of having to
"press <Enter> to continue"
"set cmdheight=2

" Display line numbers on the left
set number

" Do not wrap long line
set wrap!

" Quickly time out on keycodes, but never time out on mappings
set notimeout ttimeout ttimeoutlen=200

" Indentation settings for using 4 spaces instead of tabs.
set shiftwidth=2
set softtabstop=2
set expandtab
set tabstop=2

" Map Y to act like D and C, i.e. to yank until EOL, rather than act as yy,
" which is the default
map Y y$

" Map <C-L> (redraw screen) to also turn off search highlighting until the
" next search
nnoremap <C-L> :nohl<CR><C-L>

" Press space to clear search highlighting and any message already displayed.
nnoremap <silent> <Space> :silent noh<Bar>echo<CR>
" use color in putty
if has("terminfo")
  let &t_Co=16
  let &t_AB="\<Esc>[%?%p1%{8}%<%t%p1%{40}%+%e%p1%{92}%+%;%dm"
  let &t_AF="\<Esc>[%?%p1%{8}%<%t%p1%{30}%+%e%p1%{82}%+%;%dm"
else
  let &t_Co=16
  let &t_Sf="\<Esc>[3%dm"
  let &t_Sb="\<Esc>[4%dm"
endif

" from jonlee
set t_Co=256
colorscheme desert
syntax enable

"enable indent folding
"set foldname
"set fdm=indent

"fold with tab
nnoremap <silent> <Tab> za

" show extra spaces at the end of line
highlight ExtraWhitespace ctermbg=darkgreen guibg=darkgreen
match ExtraWhitespace /\s\+$\| \+\ze\t/
autocmd Syntax * syn match ExtraWhitespace /\s\+$\| \+\ze\t/

" set status line
set statusline=%F%m%r%h%w\ [TYPE=%Y\ %{&ff}]\ [%l/%L\ (%p%%)]


"print red lines that have more that 80 char
":let w:m1=matchadd('Search', '\%<81v.\%>77v', -1)
":let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
":au BufWinEnter * let w:m1=matchadd('Search', '\%<81v.\%>77v', -1)
:"au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)

"__EOF__

